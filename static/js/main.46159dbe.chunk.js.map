{"version":3,"sources":["assets/images/cross_out_horizontal.png","assets/images/cross_out_horizontal_with_zeros.png","assets/images/cross_out_horizontal_with_zeros_next_line.png","assets/images/cross_out_vertical.png","assets/images/cross_out_vertical_with_zeros.png","assets/images/next_level.png","components/home.tsx","components/cell.tsx","components/board.tsx","components/matrix.tsx","components/rules.tsx","index.tsx","assets/images/classical_board.png"],"names":["module","exports","__webpack_require__","p","Home","react","Cell","_this$props","this","props","selected","crossedOut","onClick","value","buttonClasses","push","type","className","join","disabled","Component","Board","_this","numbers","map","row","rowIndex","rowSelected","previousSelectedNumberRow","key","theNumber","colIndex","previousSelectedNumberCol","cell","onCellClick","toString","React","Matrix","observer","Object","get","getPrototypeOf","prototype","call","observe","scoreText","$","hasClass","addClass","removeClass","_this2","role","handleReset","handleUndo","canUndo","handleRedo","canRedo","handleNextLevel","crossoutsMade","board","numbersTable","col","handleNumberClick","clickedNumberIndex","BOARD_WIDTH","clickedNumber","Error","concat","a","b","undefined","previousSelectedNumberIndex","areNeighbors","previousSelectedNumber","crossOut","index1","index2","slice","history","positionInHistory","removeZeroRows","_this3","rowsToRemove","i","length","every","n","reverse","forEach","splice","positiveNumbers","filter","apply","toConsumableArray","INITIAL_BOARD","neighbors","indexOf","index","_this4","offset","result","sliceEnd","Math","min","floor","computed","observable","action","Rules","id","href","data-spy","data-target","src","classical_board","alt","cross_out_horizontal","cross_out_horizontal_with_zeros","cross_out_horizontal_with_zeros_next_line","cross_out_vertical","cross_out_vertical_with_zeros","next_level","root","document","getElementById","ReactDOM","BrowserRouter","basename","data-toggle","aria-controls","aria-expanded","aria-label","Link","to","Route","path","exact","component"],"mappings":"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","file":"static/js/main.46159dbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross_out_horizontal.bdebbf05.png\";","module.exports = __webpack_public_path__ + \"static/media/cross_out_horizontal_with_zeros.40baaec5.png\";","module.exports = __webpack_public_path__ + \"static/media/cross_out_horizontal_with_zeros_next_line.12165542.png\";","module.exports = __webpack_public_path__ + \"static/media/cross_out_vertical.70338c3c.png\";","module.exports = __webpack_public_path__ + \"static/media/cross_out_vertical_with_zeros.7fd132f5.png\";","module.exports = __webpack_public_path__ + \"static/media/next_level.11064122.png\";","import * as React from \"react\";\n\nconst Home = () => (\n  <div>\n    This is a home page :)\n  </div>\n);\n\nexport default Home;\n","import * as React from \"react\";\nimport {Component} from \"react\";\n\ninterface ICellProps {\n  crossedOut: boolean;\n  selected: boolean;\n  onClick: () => void;\n  value: string;\n}\n\nclass Cell extends Component<ICellProps> {\n  public render() {\n    const {selected, crossedOut, onClick, value} = this.props;\n    const buttonClasses = ['Cell'];\n    if (selected) {\n      buttonClasses.push('selected');\n    }\n    if (crossedOut) {\n      buttonClasses.push('crossedOut');\n    }\n    return (\n      <button type=\"button\"\n              className={buttonClasses.join(' ')}\n              onClick={onClick}\n              disabled={crossedOut}>\n        {value}\n      </button>\n    );\n  }\n}\n\nexport default Cell;\n","import * as React from \"react\";\n\nimport Cell from \"./cell\";\n\ninterface IBoardProps {\n  numbers: number[][];\n  onCellClick: (row: number, col: number) => void;\n  previousSelectedNumberRow?: number;\n  previousSelectedNumberCol?: number;\n}\n\nclass Board extends React.Component<IBoardProps> {\n  get numbers() {\n    return this.props.numbers;\n  }\n\n  public render() {\n    return (\n      <div className=\"Board overflow-scroll\">\n        {this.numbers.map((row, rowIndex) => {\n          const rowSelected = rowIndex === this.props.previousSelectedNumberRow;\n          return (\n            <div className=\"row flex-nowrap mx-0\" key={rowIndex}>\n              {row.map((theNumber, colIndex) => {\n                const selected = rowSelected && colIndex === this.props.previousSelectedNumberCol;\n                const crossedOut = !selected && theNumber === 0;\n                return (\n                  <div className=\"col-\" key={(rowIndex << 10) + colIndex}>\n                    <Cell onClick={() => this.props.onCellClick(rowIndex, colIndex)}\n                          selected={selected}\n                          crossedOut={crossedOut}\n                          value={theNumber.toString()}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import $ from \"jquery\";\nimport {action, computed, observable, observe} from \"mobx\";\nimport {observer} from \"mobx-react\";\nimport * as React from \"react\";\n\nimport Board from \"./board\";\n\n@observer\nclass Matrix extends React.Component {\n\n  @computed\n  private get numbers() {\n    return this.history[this.positionInHistory];\n  }\n\n  @computed\n  private get numbersTable() {\n    const result = [];\n    for (let i = 0; i < this.numbers.length; i += BOARD_WIDTH) {\n      const sliceEnd = Math.min(i + BOARD_WIDTH, this.numbers.length);\n      result.push(this.numbers.slice(i, sliceEnd));\n    }\n    return result;\n  }\n\n  @computed\n  private get previousSelectedNumber() {\n    if (this.previousSelectedNumberIndex !== undefined &&\n        this.previousSelectedNumberIndex >= 0 &&\n        this.previousSelectedNumberIndex < this.numbers.length) {\n      return this.numbers[this.previousSelectedNumberIndex];\n    }\n    return undefined;\n  }\n\n  @computed\n  private get previousSelectedNumberRow() {\n    return (\n      this.previousSelectedNumberIndex &&\n      Math.floor(this.previousSelectedNumberIndex / BOARD_WIDTH)\n    );\n  }\n\n  @computed\n  private get previousSelectedNumberCol() {\n    return (\n      this.previousSelectedNumberIndex &&\n      this.previousSelectedNumberIndex % BOARD_WIDTH\n    );\n  }\n\n  private get canUndo() {\n    return this.positionInHistory > 0;\n  }\n\n  private get canRedo() {\n    return this.positionInHistory < this.history.length - 1;\n  }\n\n  @observable\n  private history: number[][] = [[...INITIAL_BOARD]];\n\n  @observable\n  private positionInHistory: number = 0;\n\n  @observable\n  private previousSelectedNumberIndex?: number;\n\n  @observable\n  private crossoutsMade: number = 0;\n\n  public componentDidMount(): void {\n    if (super.componentDidMount) {\n      super.componentDidMount();\n    }\n\n    observe(this, 'crossoutsMade',  () => {\n      const scoreText = $('.scoreText');\n      if (scoreText.hasClass('animation2')) {\n        scoreText.addClass('animation1')\n        scoreText.removeClass('animation2')\n      } else {\n        scoreText.addClass('animation2')\n        scoreText.removeClass('animation1')\n      }\n    });\n  }\n\n  public render() {\n    return (\n      <div className=\"d-flex flex-column align-items-center\">\n        <div className=\"mt-2 sticky-top d-flex flex-column align-items-center\">\n          <div className=\"btn-group\" role=\"group\">\n            <button className=\"btn btn-control\"\n                    onClick={() => this.handleReset()}>\n              Reset\n            </button>\n            <button className=\"btn btn-control\"\n                    onClick={() => this.handleUndo()}\n                    disabled={!this.canUndo}>\n              Undo\n            </button>\n            <button className=\"btn btn-control\"\n                    onClick={() => this.handleRedo()}\n                    disabled={!this.canRedo}>\n              Redo\n            </button>\n            <button className=\"btn btn-control\"\n                    onClick={() => this.handleNextLevel()}>\n              Next Level\n            </button>\n          </div>\n          <p className=\"scoreText\">Crossouts: {this.crossoutsMade}</p>\n        </div>\n        {/*<div className=\"overflow-scroll\">*/}\n          <Board numbers={this.numbersTable}\n                 previousSelectedNumberRow={this.previousSelectedNumberRow}\n                 previousSelectedNumberCol={this.previousSelectedNumberCol}\n                 onCellClick={(row, col) =>\n                   this.handleNumberClick(row, col)\n                 }/>\n        {/*</div>*/}\n      </div>\n    );\n  }\n\n  @action\n  private handleNumberClick(row: number, col: number) {\n    const clickedNumberIndex = row * BOARD_WIDTH + col;\n    const clickedNumber = this.numbers[clickedNumberIndex];\n\n    if (clickedNumber === 0) {\n      return;\n    }\n\n    if (!clickedNumber || clickedNumber < 0 || clickedNumber >= 10) {\n      throw Error(`Unexpected number ${clickedNumber}`);\n    }\n\n    if (this.previousSelectedNumberIndex === undefined) {\n      this.previousSelectedNumberIndex = clickedNumberIndex;\n      return;\n    }\n\n    if (this.previousSelectedNumberIndex === clickedNumberIndex) {\n      this.previousSelectedNumberIndex = undefined;\n    } else if (this.areNeighbors(clickedNumberIndex, this.previousSelectedNumberIndex)) {\n      if (numbersMatch(clickedNumber, this.previousSelectedNumber)) {\n        this.crossOut(this.previousSelectedNumberIndex, clickedNumberIndex);\n      } else {\n        this.previousSelectedNumberIndex = clickedNumberIndex;\n      }\n    } else {\n      this.previousSelectedNumberIndex = clickedNumberIndex;\n    }\n  }\n\n  @action\n  private crossOut(index1: number, index2: number) {\n    const numbers = this.numbers.slice();\n    numbers[index1] = 0;\n    numbers[index2] = 0;\n    this.previousSelectedNumberIndex = undefined;\n\n    this.history = this.history.slice(0, this.positionInHistory + 1).concat([numbers]);\n    this.positionInHistory++;\n    this.removeZeroRows();\n    this.crossoutsMade++;\n  }\n\n  @action\n  private removeZeroRows() {\n    const rowsToRemove: number[] = [];\n    for (let i = 0; i < this.numbers.length - BOARD_WIDTH; i += BOARD_WIDTH) {\n      const row = this.numbers.slice(i, i + BOARD_WIDTH);\n      if (row.every((n) => n === 0)) {\n        rowsToRemove.push(i);\n      }\n    }\n    rowsToRemove.reverse().forEach((i) => {\n      this.numbers.splice(i, BOARD_WIDTH);\n    });\n  }\n\n  @action\n  private handleUndo() {\n    this.positionInHistory--;\n    this.crossoutsMade--;\n  }\n\n  @action\n  private handleRedo() {\n    this.positionInHistory++;\n    this.crossoutsMade++;\n  }\n\n  @action\n  private handleNextLevel() {\n    const numbers = this.numbers.slice();\n    const positiveNumbers = numbers.filter((n) => n > 0);\n    numbers.push(...positiveNumbers);\n    this.history = [numbers];\n    this.positionInHistory = 0;\n  }\n\n  @action\n  private handleReset() {\n    this.history = [INITIAL_BOARD.slice()];\n    this.positionInHistory = 0;\n    this.crossoutsMade = 0;\n  }\n\n  private areNeighbors(index1: number, index2: number) {\n    return this.neighbors(index1).indexOf(index2) >= 0;\n  }\n\n  private neighbors(index: number) {\n    const neighbors: number[] = [];\n    [-BOARD_WIDTH, -1, +1, +BOARD_WIDTH].forEach((offset) => {\n      let i = index;\n      while (true) {\n        i += offset;\n        if (i < 0 || i >= this.numbers.length) {\n          break;\n        }\n        if (this.numbers[i] !== 0) {\n          neighbors.push(i);\n          break;\n        }\n      }\n    });\n    return neighbors;\n  }\n}\n\nconst BOARD_WIDTH = 9;\n\nconst INITIAL_BOARD = [\n  1, 2, 3, 4, 5, 6, 7, 8, 9,\n  1, 1, 1, 2, 1, 3, 1, 4, 1,\n  5, 1, 6, 1, 7, 1, 8, 1, 9,\n];\n\nfunction numbersMatch(a?: number, b?: number) {\n  return a && b && a + b === BOARD_WIDTH + 1 || a === b;\n}\n\nexport default Matrix;\n","import * as React from \"react\";\nimport classical_board from \"../assets/images/classical_board.png\";\nimport cross_out_horizontal from \"../assets/images/cross_out_horizontal.png\";\nimport cross_out_horizontal_with_zeros from \"../assets/images/cross_out_horizontal_with_zeros.png\";\nimport cross_out_horizontal_with_zeros_next_line from \"../assets/images/cross_out_horizontal_with_zeros_next_line.png\";\nimport cross_out_vertical from \"../assets/images/cross_out_vertical.png\";\nimport cross_out_vertical_with_zeros from \"../assets/images/cross_out_vertical_with_zeros.png\";\nimport next_level from \"../assets/images/next_level.png\";\n\nconst Rules = () => (\n  <div className=\"row\">\n    <div className=\"rulesNavContainer col-3 sticky-top\">\n      <nav id=\"rulesNav\" className=\"navbar navbar-light sticky-top\">\n        <nav className=\"navbar-nav flex-column\">\n          <a className=\"nav-link\" href=\"#gameRules\">Game Rules</a>\n          <nav className=\"ml-3 navbar-nav nav flex-column\">\n            <a className=\"nav-link\" href=\"#board\">Board</a>\n            <a className=\"nav-link\" href=\"#goal\">Goal</a>\n            <a className=\"nav-link\" href=\"#howToCrossOut\">How To Crossout?</a>\n            <a className=\"nav-link\" href=\"#nextLevel\">Next Level</a>\n          </nav>\n        </nav>\n      </nav>\n    </div>\n    <div className=\"rulesContainer col\">\n      <div className=\"Rules\" data-spy=\"scroll\" data-target=\"#rulesNav\">\n        <section id=\"gameRules\" className=\"pt-4\">\n          <h2>Game rules</h2>\n        </section>\n\n        <section id=\"board\" className=\"mt-2\">\n          <h4>Board</h4>\n          <p>\n            The classical board looks like this:\n          </p>\n          <img src={classical_board}\n               alt=\"Classical Board\"\n               className=\"classical_board\"/>\n        </section>\n        <section id=\"goal\" className=\"mt-3\">\n          <h4>Goal</h4>\n          <p>\n            The goal is to cross out all the numbers, so that the game board is empty\n            and in as few crossouts as possible.\n          </p>\n        </section>\n        <section id=\"howToCrossOut\">\n          <h4>How to cross out?</h4>\n          <p>\n            In the classical game you have numbers from 1 to 9. You can cross out\n            pairs of numbers which sum up to 10, or are identical.\n          </p>\n          <p>\n            But there are some restrictions on that. You can cross out only those\n            pairs of numbers which are neighbors. For two numbers on the board to be\n            neighbors one of the following is required:\n          </p>\n          <ol>\n            <li>\n              They go one after another (from <b>left</b> to <b>right</b>,\n              from <b>top</b> to <b>bottom</b>):\n              <br/>\n              <img src={cross_out_horizontal}\n                   alt=\"Cross-out Horizontal\"\n                   className=\"cross_out_horizontal\"/>\n              <br/>\n              There can be any number of `zeros` between them:\n              <br/>\n              <img src={cross_out_horizontal_with_zeros}\n                   alt=\"Cross-out Horizontal With Zeros\"\n                   className=\"cross_out_horizontal_with_zeros\"/>\n              <br/>\n              The second one can even be one the next line:\n              <br/>\n              <img src={cross_out_horizontal_with_zeros_next_line}\n                   alt=\"Cross-out Horizontal With Zeros Next Line\"\n                   className=\"cross_out_horizontal_with_zeros_next_line\"/>\n            </li>\n            <li>\n              They lie vertically next to each other:<br/>\n              <img src={cross_out_vertical}\n                   alt=\"Cross-out Vertical\"\n                   className=\"cross_out_vertical\"/>\n              <br/>\n              There can be any number of `zeros` between them:\n              <br/>\n              <img src={cross_out_vertical_with_zeros}\n                   alt=\"Cross-out Vertical With Zeros\"\n                   className=\"cross_out_vertical_with_zeros\"/>\n            </li>\n          </ol>\n        </section>\n\n        <section id=\"nextLevel\">\n          <h4>Next level</h4>\n          <p>\n            In the most cases you can't win on the first level. When you can't find\n            any more pairs to cross out, just go to the next level\n            (click <span><img src={next_level} alt=\"Next Level\" className=\"next_level\"/></span>).\n\n            It will duplicate\n            all the numbers in the current board except `zeros` and place them to the\n            end of the board. Your history of moves will be lost and you can't go back\n            to the previous level anymore.\n          </p>\n        </section>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Rules;\n","import \"bootstrap/js/src/index\"\nimport \"bootstrap/js/src/util\"\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\n\nimport Home from \"./components/home\";\nimport Matrix from \"./components/matrix\";\nimport Rules from \"./components/rules\";\n\nimport './styles/styles.sass';\n\nconst root = document.getElementById('root');\nconst Index = () => (\n  <BrowserRouter basename=\"matrix\">\n    <div className='Index h-100'>\n      <nav className=\"navbar sticky-top navbar-expand-sm navbar-dark bg-dark\">\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#main-nav\"\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"/>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"main-nav\">\n          <nav className=\"container navbar-nav justify-content-start\">\n            <Link className=\"navbar-brand nav-item nav-link\" to=\"/\">Matrix</Link>\n            <Link className=\"nav-item nav-link\" to=\"/game/\">Play</Link>\n            <Link className=\"nav-item nav-link\" to=\"/rules/\">Rules</Link>\n          </nav>\n        </div>\n      </nav>\n      <div role=\"main\" className=\"container\">\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/game/\" exact component={Matrix}/>\n        <Route path=\"/rules/\" exact component={Rules}/>\n      </div>\n    </div>\n  </BrowserRouter>\n);\n\nReactDOM.render(<Index/>, root);\n// registerServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/classical_board.55e6cbd9.png\";"],"sourceRoot":""}